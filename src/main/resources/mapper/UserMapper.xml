<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.startzyp.github.mypiao.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.startzyp.github.mypiao.entity.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, role, username, password, realname, email, phone, addr
  </sql>

   <select id="checkUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
  		select 
		    count(*)
	    from zk_user
	    where  username=#{value}
  </select>

  <select id="login" parameterType="com.startzyp.github.mypiao.entity.User" resultType="com.startzyp.github.mypiao.entity.User">
  		select
  			<include refid="Base_Column_List" />
  		from zk_user
  		where username=#{username} and password=#{password}
  </select>

    <select id="getuser" parameterType="java.lang.String" resultType="com.startzyp.github.mypiao.entity.User">
        select
        <include refid="Base_Column_List" />
        from zk_user
        where username=#{value}
    </select>

  <insert id="insert" parameterType="com.startzyp.github.mypiao.entity.User">
    insert into zk_user (role, username, password)
    values (#{role,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.startzyp.github.mypiao.entity.User">
    update zk_user
    set
      realname = #{realname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR}
    where username = #{username,jdbcType=VARCHAR}
  </update>


</mapper>